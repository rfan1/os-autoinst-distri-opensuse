<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
  <deploy_image>
    <image_installation config:type="boolean">false</image_installation>
  </deploy_image>
  <general>
    <ask-list config:type="list"/>
    <mode>
      <confirm config:type="boolean">false</confirm>
      <final_halt config:type="boolean">false</final_halt>
      <final_reboot config:type="boolean">false</final_reboot>
      <halt config:type="boolean">false</halt>
      <second_stage config:type="boolean">true</second_stage>
    </mode>
    <proposals config:type="list"/>
    <!-- The PackageHub repos feature an unknown gpg key. We want to both trust it and import it. -->
    <signature-handling>
      <accept_file_without_checksum config:type="boolean">false</accept_file_without_checksum>
      <!-- autoyast docu says: ... accept known keys you have not yet trusted . Not enough here. -->
      <accept_non_trusted_gpg_key config:type="boolean">false</accept_non_trusted_gpg_key>
      <!-- autoyast docu says: ... new GPG keys of the installation sources... Supposedly needed. -->
      <accept_unknown_gpg_key config:type="boolean">true</accept_unknown_gpg_key>
      <accept_unsigned_file config:type="boolean">false</accept_unsigned_file>
      <accept_verification_failed config:type="boolean">false</accept_verification_failed>
      <!-- autoyast docu says: ... accept and import new GPG keys ... in its database. Supposedly also needed. -->
      <import_gpg_key config:type="boolean">true</import_gpg_key>
    </signature-handling>
    <storage/>
  </general>
  <add-on>
    <add_on_products config:type="list">
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP1/x86_64/product/</media_url>
        <product>sle-module-basesystem</product>
        <alias>sle-module-basesystem:15.1::pool</alias>
        <name>sle-module-basesystem:15.1::pool</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <!-- SLE15SP1 AutoYaST docu sec. 4.9.3 Installing Additional/Customized Packages or Products example 4.24
             "true" <==> Users are asked whether to add such a product. If so, then
             selected: defines the default state of pre-selected state of packages -->
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Basesystem/15-SP1/x86_64/update/</media_url>
        <alias>sle-module-basesystem:15.1::update</alias>
        <name>sle-module-basesystem:15.1::update</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Products/SLE-Module-Development-Tools/15-SP1/x86_64/product/</media_url>
        <product>sle-module-development-tools</product>
        <alias>sle-module-development-tools:15.1::pool</alias>
        <name>sle-module-development-tools:15.1::pool</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <alias>sle-module-development-tools:15.1::update</alias>
        <media_url>http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Development-Tools/15-SP1/x86_64/update/</media_url>
        <name>sle-module-development-tools:15.1::update</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Products/SLE-Module-Server-Applications/15-SP1/x86_64/product/</media_url>
        <product>sle-module-server-applications</product>
        <alias>sle-module-server-applications:15.1::pool</alias>
        <name>sle-module-server-applications:15.1::pool</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <alias>sle-module-server-applications:15.1::update</alias>
        <media_url>http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Server-Applications/15-SP1/x86_64/update/</media_url>
        <name>sle-module-server-applications:15.1::update</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Products/SLE-Product-SLES/15-SP1/x86_64/product/</media_url>
        <product>SLES</product>
        <alias>SLES:15.1::pool</alias>
        <name>SLES:15.1::pool</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <!-- SLE15SP1 AutoYaST docu sec. 4.9.2 Package Selection with Patterns and Packages Sections
             "true" here triggers a "confirm license" dialog rather than auto-accepting the license. Unwanted. -->
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <alias>SLES:15.1::update</alias>
        <media_url>http://download.suse.de/ibs/SUSE/Updates/SLE-Product-SLES/15-SP1/x86_64/update/</media_url>
        <name>SLES:15.1::update</name>
        <priority config:type="integer">99</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Backports/SLE-15-SP1_x86_64/product/</media_url>
        <alias>PackageHub:15.1::product</alias>
        <name>PackageHub:15.1::product</name>
        <priority config:type="integer">20</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
      <listentry>
        <media_url>http://download.suse.de/ibs/SUSE/Backports/SLE-15-SP1_x86_64/standard</media_url>
        <!-- NFS: /mounts/mirror/SuSE/build.suse.de/SUSE/Backports/SLE-15-SP1_x86_64/standard
             NOTE: *four* RPM subdirs: noarch{,_GA}, x86_64{,_GA}. Looks like both GA pool and updates.  -->
        <alias>PackageHub:15.1::pool</alias>
        <name>PackageHub:15.1::pool</name>
        <priority config:type="integer">20</priority>
        <ask_on_error config:type="boolean">false</ask_on_error>
        <confirm_license config:type="boolean">false</confirm_license>
        <ask_user config:type="boolean">false</ask_user>
        <selected config:type="boolean">true</selected>
      </listentry>
    </add_on_products>
  </add-on>
  <bootloader>
    <global>
      <timeout config:type="integer">-1</timeout>
    </global>
  </bootloader>
  <networking>
    <interfaces config:type="list">
      <interface>
        <bootproto>dhcp</bootproto>
        <device>eth0</device>
        <startmode>onboot</startmode>
      </interface>
    </interfaces>
    <ipv6 config:type="boolean">true</ipv6>
    <keep_install_network config:type="boolean">false</keep_install_network>
    <managed config:type="boolean">false</managed>
    <routing>
      <ipv4_forward config:type="boolean">false</ipv4_forward>
      <ipv6_forward config:type="boolean">false</ipv6_forward>
    </routing>
  </networking>
  <software>
    <image/>
    <instsource/>
    <products config:type="list">
      <product>SLES</product>
    </products>
    <packages config:type="list">
      <package>vim</package>
      <package>apache2</package>
      <package>dhcp-server</package>
      <package>mc</package>
      <package>syslinux</package>
      <package>openssh</package>
      <package>less</package>
      <package>nfs-client</package>
      <package>autofs</package>
      <package>bind</package>
      <package>tftp</package>
      <package>yast2-iscsi-lio-server</package>
      <package>tgt</package>
    </packages>
    <patterns config:type="list">
      <pattern>enhanced_base</pattern>
    </patterns>
  </software>
  <users config:type="list">
    <user>
      <encrypted config:type="boolean">false</encrypted>
      <username>root</username>
      <user_password>nots3cr3t</user_password>
    </user>
    <user>
      <encrypted config:type="boolean">false</encrypted>
      <username>bernhard</username>
      <user_password>nots3cr3t</user_password>
    </user>
  </users>
  <services-manager>
  <!-- SLE15SP1 AutoYaST docu sec. 4.11: Services and Targets-->
    <default_target>multi-user</default_target>
    <!-- We don't want much by default. For testing of this autoyast let's tmp. enable sshd
         FIXME: don't forget to comment this part out later. The real supportserver won't need it. -->
    <services>
      <enable config:type="list">
        <service>sshd</service>
      </enable>
    </services>
    <!-- END  enabling sshd service -->
  </services-manager>
</profile>
